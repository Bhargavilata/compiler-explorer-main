{"version":3,"sources":["webpack:///./static/noscript.js","webpack:///./static/toggles.js","webpack:///./static/noscript.scss?99c5"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,+BAA+B;AAC/D;AACA;AACA;AACA;;AAEA,mBAAO,CAAC,6BAAiB;;AAEzB,QAAQ,mBAAO,CAAC,oBAAQ;;AAExB;AACA,mBAAO,CAAC,uBAAW;AACnB,mBAAO,CAAC,uBAAW;;AAEnB,cAAc,mBAAO,CAAC,uBAAW;;AAEjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;ACnED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,+BAA+B;AAC/D;AACA;AACA;AACA;;AAEa;AACb,QAAQ,mBAAO,CAAC,wBAAY;AAC5B,QAAQ,mBAAO,CAAC,oBAAQ;AACxB,mBAAmB,mBAAO,CAAC,oBAAQ;;;AAGnC;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC9HA;AACA,OAAO,KAAU,EAAE,kBAKd","file":"noscript.js","sourcesContent":["// Copyright (c) 2020, Compiler Explorer Authors\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//     * Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nrequire('./noscript.scss');\n\nvar $ = require('jquery');\n\n// eslint-disable-next-line requirejs/no-js-extension\nrequire('popper.js');\nrequire('bootstrap');\n\nvar Toggles = require('./toggles');\n\nfunction initMenus() {\n    $('.button-checkbox').each(function () {\n        var container = $(this);\n\n        var span = container.find('span');\n        span.remove();\n\n        var option = container.find('input');\n        option.addClass('d-none');\n\n        var button = $('<button />');\n        button.addClass('dropdown-item btn btn-sm btn-light');\n        button.attr('type', 'button');\n        button.attr('title', option.attr('title'));\n        button.data('bind', option.attr('name'));\n        button.attr('aria-pressed', option.attr('checked') === 'checked' ? 'true' : 'false');\n        button.append(span);\n        container.prepend(button);\n\n        var parent = container.parent();\n        parent.removeClass('noscriptdropdown');\n        parent.addClass('dropdown-menu');\n    });\n\n    $('.noscriptdropdown').removeClass('noscriptdropdown').addClass('dropdown-menu');\n    $('.nodropdown-toggle').removeClass('nodropdown-toggle').addClass('dropdown-toggle');\n\n    new Toggles($('.output'));\n    new Toggles($('.filters'));\n}\n\n$(document).ready(function () {\n    initMenus();\n});\n","// Copyright (c) 2018, Compiler Explorer Authors\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//     * Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\n'use strict';\nvar _ = require('underscore');\nvar $ = require('jquery');\nvar EventEmitter = require('events');\n\n\nfunction Togglesv2(root, state) {\n    EventEmitter.call(this);\n    var buttons = root.find('.button-checkbox');\n    var self = this;\n    this.buttons = buttons;\n    this.state = _.extend({}, state);\n    // Based on https://bootsnipp.com/snippets/featured/jquery-checkbox-buttons\n    buttons.each(function () {\n        // Settings\n        var $widget = $(this),\n            $button = $widget.find('button'),\n            $checkbox = $widget.find('input:checkbox'),\n            bind = $button.data('bind'),\n            settings = {\n                on: {\n                    icon: 'far fa-check-square',\n                },\n                off: {\n                    icon: 'far fa-square',\n                },\n            };\n\n        // Event Handlers\n        $button.on('click', function (e) {\n            $checkbox.prop('checked', !$checkbox.is(':checked'));\n            $checkbox.triggerHandler('change');\n            e.stopPropagation();\n        });\n        $checkbox.on('change', function () {\n            updateDisplay();\n        });\n\n        // Actions\n        function updateDisplay(forcedState) {\n            if (forcedState !== undefined) {\n                $checkbox.prop('checked', forcedState);\n            }\n            var isChecked = $checkbox.is(':checked');\n\n            // Set the button's state\n            $button.data('state', (isChecked) ? 'on' : 'off');\n\n            // Set the button's icon\n            $button.find('.state-icon')\n                .removeClass()\n                .addClass('state-icon ' + settings[$button.data('state')].icon);\n\n            // Update the button's color\n            $button.toggleClass('active', isChecked);\n            if (forcedState === undefined) {\n                self.set(bind, isChecked);\n            }\n        }\n\n        // Initialization\n        function init() {\n            updateDisplay(self.state[bind]);\n\n            // Inject the icon if applicable\n            if ($button.find('.state-icon').length === 0) {\n                $button.prepend('<i class=\"state-icon ' + settings[$button.data('state')].icon + '\"></i> ');\n            }\n        }\n        init();\n    });\n}\n\n_.extend(Togglesv2.prototype, EventEmitter.prototype);\n\nTogglesv2.prototype.get = function () {\n    return _.clone(this.state);\n};\n\nTogglesv2.prototype.set = function (key, value) {\n    this._change(function () {\n        this.state[key] = value;\n    }.bind(this));\n};\n\nTogglesv2.prototype.enableToggle = function (key, enable) {\n    this.buttons.each(function () {\n        var widget = $(this);\n        var button = $(widget.find('button'));\n        var bind = button.data('bind');\n        if (bind === key) {\n            button.prop('disabled', !enable);\n        }\n    });\n};\n\nTogglesv2.prototype._change = function (update) {\n    var before = this.get();\n    update();\n    this.emit('change', before, this.get());\n};\n\nmodule.exports = Togglesv2;\n","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1625758778393\n      var cssReload = require(\"/Users/bhargavi/Desktop/compiler-explorer-main/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"./\",\"hmr\":true,\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}